@use "../base/mixins";
@use "../base/typography";

.overlay {
	position: fixed;
	top: 0;
	left: 0;
	width: 100dvw;
	height: 100dvh;
	background-color: rgba(0, 0, 0, 0.2);
	backdrop-filter: blur(2px);
	z-index: 1000;
	transition: all 0.5s;
}

// generic modal
.modal {
	position: fixed;

	@include mixins.respond(phone) {
		bottom: 40vh;
	}
	@include mixins.respond(notPhone) {
		top: 20vh;
	}
	left: 50%;
	transform: translateX(-50%);
	width: 90%;
	max-width: 50rem;
	height: max-content;
	min-height: calc(6rem + 4px); // to include close btn
	min-width: 30rem;
	background-color: var(--black);
	border: 2px solid var(--background);
	border-radius: 8px;
	transition: all 0.5s;

	&__close {
		@include mixins.flexCenter();
		background-color: var(--black);
		padding: 0;
		height: 5rem;
		width: 5rem;
		border: none;
		position: fixed;
		top: 0;
		right: 0;

		&:hover {
			background-color: var(--black);
			border: none;
		}
	}
}

// start vote confirmation modal
.voteControlModal {
	@include mixins.flexCenter();
	font-size: typography.$fontsize-medium;
	width: 100%;
	// background-color: pink;

	&__text {
		text-wrap: pretty;
		text-align: center;
		padding: 6rem 2rem;
		width: 100%;

		span {
			font-weight: 500;
			color: var(--primary);
		}

		p {
			color: var(--primary);
		}
	}

	&__btns {
		@include mixins.flexCenter();
		flex-direction: row;
		gap: 1rem;
		width: 100%;
		justify-content: flex-end;
		margin-top: -4rem;
		padding: 1.5rem;
	}

	&__btn {
		padding: 1rem 1.5rem;
		width: 13rem;

		&--ok {
			background-color: var(--black);
		}
	}
}

// when the open window trigger is a svg
.svgTriggerToOpenModal {
	@include mixins.flexCenter();
	background-color: var(--black);
	padding: 0;
	height: 4rem;
	width: 4rem;
	border: none;

	&:hover {
		background-color: var(--black);
		border: none;
	}
}

.voteInfo {
	width: 100%;

	&__text {
		padding: 6rem 1rem;
		text-wrap: pretty;
		text-align: center;
		font-size: typography.$fontsize-medium;
	}
}
